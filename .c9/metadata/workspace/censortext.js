{"changed":true,"filter":false,"title":"censortext.js","tooltip":"/censortext.js","value":"var censoredWords = [\"sad\", \"bad\", \"mad\"];\nvar customCensoredWords = []; //empty array\n\n/* This function takes the input string and determines if there are any matches\n   between a determinate and custom list of censored words and then replaces\n   then with the hash character\n*/\nfunction censor(inputString)\n{\n    //the for in loop is similar to the foreach loop in other languages\n    //like C#\n    for (var index in censoredWords)\n    {\n        //replace is a string processing method\n        //look here: http://www.w3schools.com/jsref/jsref_replace.asp\n        inputString = inputString.replace(censoredWords[index], \"####\");\n    }\n\n    //we don't redeclare index as JavaScript sees that we already created it\n    //on line 8\n    for (var idx in customCensoredWords)\n    {\n        inputString = inputString.replace(customCensoredWords[idx], \"####\");\n    }\n\n    return inputString;\n}\n\n/* This function will add to the customCensoredWord array\n*/\nfunction addCensoredWord(word)\n{\n    customCensoredWords.push(word); //this adds the word to the \"back\" of the array\n}\n\n/* This function prints out the list of all censored words for review\n*/\nfunction getCensoredWords()\n{\n    //here we observe interesting JavaScript behavior...\n    //The concat method for an Array behaves by combining the contents of\n    //both arrays and returns a string output of their contents\n    //http://www.w3schools.com/jsref/jsref_concat_array.asp\n    return censoredWords.concat(customCensoredWords);\n}\n\n//this will make these functions externally available for other programs\n//particularly if this program is a module itself\nexports.censor = censor;\nexports.addCensoredWord = addCensoredWord;\nexports.getCensoredWords = getCensoredWords;","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":42}},"text":"var censoredWords = [\"sad\", \"bad\", \"mad\"];"},{"action":"insertText","range":{"start":{"row":0,"column":42},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":50,"column":0}},"lines":["var customCensoredWords = []; //empty array","","/* This function takes the input string and determines if there are any matches","   between a determinate and custom list of censored words and then replaces","   then with the hash character","*/","function censor(inputString)","{","    //the for in loop is similar to the foreach loop in other languages","    //like C#","    for (var index in censoredWords)","    {","        //replace is a string processing method","        //look here: http://www.w3schools.com/jsref/jsref_replace.asp","        inputString = inputString.replace(censoredWords[index], \"####\");","    }","","    //we don't redeclare index as JavaScript sees that we already created it","    //on line 8","    for (var idx in customCensoredWords)","    {","        inputString = inputString.replace(customCensoredWords[idx], \"####\");","    }","","    return inputString;","}","","/* This function will add to the customCensoredWord array","*/","function addCensoredWord(word)","{","    customCensoredWords.push(word); //this adds the word to the \"back\" of the array","}","","/* This function prints out the list of all censored words for review","*/","function getCensoredWords()","{","    //here we observe interesting JavaScript behavior...","    //The concat method for an Array behaves by combining the contents of","    //both arrays and returns a string output of their contents","    //http://www.w3schools.com/jsref/jsref_concat_array.asp","    return censoredWords.concat(customCensoredWords);","}","","//this will make these functions externally available for other programs","//particularly if this program is a module itself","exports.censor = censor;","exports.addCensoredWord = addCensoredWord;"]},{"action":"insertText","range":{"start":{"row":50,"column":0},"end":{"row":50,"column":44}},"text":"exports.getCensoredWords = getCensoredWords;"}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":50,"column":44},"end":{"row":50,"column":44},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1410135213448}